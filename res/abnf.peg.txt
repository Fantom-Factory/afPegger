
rulelist		= (!\eos (rule / (c-wsp* c-nl)))+

// continues if next line starts with white space
rule			= rulename defined-as elements c-nl

rulename		= [a-zA-Z] [a-zA-Z0-9-]*

// basic rules definition and incremental alternatives
defined-as		= c-wsp* ("=" / "=/") c-wsp*

elements		= alternation c-wsp*

c-wsp			= WSP / (c-nl WSP)
// comment or newline
c-nl			= comment / CRLF
comment			= ";" (WSP / VCHAR)* CRLF

# ### DO THIS IN PEG!
alternation		= concatenation (c-wsp* "/" c-wsp* concatenation)*

concatenation	= repetition (c-wsp+ repetition)*

repetition 		= repeat? element

repeat			= (DIGIT* "*" DIGIT*) / DIGIT+

element			= rulename / group / option / char-val / num-val / prose-val

group			= "(" c-wsp* alternation c-wsp* ")"

option			= "[" c-wsp* alternation c-wsp* "]"

char-val		= insensitive-str / sensitive-str

insensitive-str	= "%i"? quoted-string

sensitive-str	= "%s" quoted-string

quoted-string	= "\"" [ !#-~]* "\""
// SLY that's vchar NOT " !! - I could use [^"] but I want to limit to vchar
// quoted string of SP and VCHAR without DQUOTE

num-val			= "%" (bin-val / dec-val / hex-val)

bin-val			= "b" [01]+ (("." [01]+) / ("-" [01]+))*
// series of concatenated bit values or single ONEOF range

dec-val			= "d" DIGIT+ (("." DIGIT+) / ("-" DIGIT+))*

hex-val			= "x" [0-9A-F]i+ (("." [0-9A-F]i+) / ("-" [0-9A-F]i+))*

prose-val		= "<" [ -=?-~]* ">"
// SLY that's vchar NOT < !! - I could use [^>] but I want to limit to vchar
// bracketed string of SP and VCHAR without angles prose description, to be used as last resort


DIGIT			= [0-9]
WSP				= [ \t]
CRLF			= \eos / "\n"
VCHAR			= [!-~]
