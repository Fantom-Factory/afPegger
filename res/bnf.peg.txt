
grammar			= (!\eos (rule / (cwsp* cnl)))+
rule			= exclude:"-"? rulename debugOff:"-"? definedAs elements cnl
rulename		= [a-zA-Z] [a-zA-Z0-9-]*
-definedAs		= cwsp* ("=" / "=/") cwsp*
-elements		= alternation cwsp*

alternation		= concatenation (cwsp* "/" cwsp* concatenation)*
concatenation	= repetition (cwsp+ repetition)*
repetition 		= repeat? element
repeat			= (a:DIGIT* "*" b:DIGIT*) / n:DIGIT+
element			= coreRule / rulename / group / option / literal / numVal / proseVal
-group			= "(" cwsp* alternation cwsp* ")"
option			= "[" cwsp* alternation cwsp* "]"

literal			= (insensitive:"%i" / sensitive:"%s")? quotedStr
-quotedStr		= "\"" string:[ !#-~]* "\""

-numVal			= binVal / decVal / hexVal
binVal			= "%b" [01]+      (("-" [01]+     ) / ("." [01]+ )*    )
decVal			= "%d" [0-9]+     (("-" [0-9]+    ) / ("." [0-9]+)*    )
hexVal			= "%x" [0-9A-F]i+ (("-" [0-9A-F]i+) / ("." [0-9A-F]i+)*)

coreRule		= "ALPHA" / "BIT" / "CHAR" / "CR" / "CRLF" / "CTL" / "DIGIT" / "DQUOTE" / "HEXDIG" / "HTAB" / "LF" / "LWSP" / "OCTET" / "SP" / "VCHAR" / "WSP"

-proseVal		= "<" (coreRule / rulename) ">"

-cwsp-			= WSP / (cnl WSP)
-cnl-			= comment / CRLF
-comment-		= ";" (WSP / VCHAR)* CRLF

-DIGIT-			= [0-9]
-WSP-			= [ \t]
-CRLF-			= \eos / "\n"
-VCHAR-			= [!-~]
